<button onclick="return false;" type="button" id="<?=$block->getHtmlId()?>"
<?php if (!$block->isSyncAvailable()) { ?> class="disabled" <?php } ?>
>
    <?php echo $block->escapeHtml($block->getButtonLabel()) ?>
</button>
 &nbsp; <img id="<?=$block->getHtmlId()?>_loader" src="<?=$block->getViewFileUrl('Drip_Connect::images/loader.gif')?>" width="15" style="display:none;" />
 &nbsp; <b id="<?=$block->getHtmlId()?>_status"><?= $block->getStateLabel() ?></b>

<script>
require(
    ["jquery"],
    function ($) {
        var options = {
            inprogress: 0,
            elem: $('#<?=$block->getHtmlId()?>'),
            res: $('#<?=$block->getHtmlId()?>_status'),
            loader: $('#<?=$block->getHtmlId()?>_loader'),
        };

        options.elem.click(function(){
            startSync();
        });

        var _ajaxBeforeSend = function () {
            options.inprogress = 1;
            options.elem.addClass('disabled');
            options.loader.show();
        };

        var _ajaxComplete = function () {
            options.inprogress = 0;
            options.loader.hide();
        };

        var startSync = function () {
            if (options.inprogress) {
                return;
            }
            $.ajax({
                url: '<?=$block->getAjaxUrl()?>',
                type: 'post',
                context: this,
                data: {
                    form_key: window.FORM_KEY,
                    store_id: <?=$block->getStoreId()?>,
                    account_id: <?=$block->getAccountId()?>
                },
                dataType: 'json',
                beforeSend: _ajaxBeforeSend,
                complete: _ajaxComplete,

                success: function (response) {
                    if (response.success) {
                        options.res.html('<?=\Drip\Connect\Model\Source\SyncState::getLabel(\Drip\Connect\Model\Source\SyncState::QUEUED)?>');
                    } else {
                        options.res.html('Error. '+response.message);
                    }
                },

                error: function () {
                    options.res.html('Error');
                    options.elem.removeClass('disabled');
                }
            });
        }
    }
);
</script>
